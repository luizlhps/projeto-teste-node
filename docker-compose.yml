version: "3.8"

services:
  postgresql:
    image: postgres:16-alpine
    container_name: teste-postgresql
    restart: unless-stopped
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: Test
    ports:
      - '5432:5432'
    expose:
      - '5432'
    networks:
      - my-network
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      timeout: 5s
      retries: 10

  app:
    depends_on:
      postgresql:
        condition: service_healthy
    build:
      context: ./
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    container_name: teste-api
    restart: unless-stopped
    env_file: ./.env
    environment:
      DATABASE_URL: postgresql://postgres:admin@teste-postgresql:5432/Test
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      PORT: ${PORT}
      HOST: localhost
      CORS_ORIGIN: http://localhost:*
    ports:
      - ${PORT}:${PORT}
    networks:
      - my-network
    stdin_open: true
    tty: true

networks:
  my-network:
    driver: bridge

volumes:
  db:
